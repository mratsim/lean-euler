-- Even Fibonacci numbers

-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def is_even (n: Nat): Bool :=
  n &&& 1 == 0

def filtered_fib_sum (f: Nat -> Bool) (max: Nat): Nat :=
  go 1 2 0
where
  go (a b acc: Nat) :=
    if 0 < a ∧ 0 < b ∧ b < max then
      -- The complex if-statement proves that max-(a+b) < max-b and so recursion terminates
      if f b then
        go b (a+b) (acc+b)
      else
        go b (a+b) acc
    else
      acc
  termination_by max-b

#eval filtered_fib_sum is_even 4000000
